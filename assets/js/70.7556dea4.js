(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{449:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("开始了文本方向的神经网络，之前的卷积看完还是很不知所云的， 对于为什么这样会更好还是只有一个大概的解释，估计文本这方面也不遑多让吧。")]),t._v(" "),s("p",[t._v("I have started learing language Models, but I'm still confused after studying Convolutional Neural Networks. The explanations provided are quite vague, and I suspect Language Models might be just as challenging as CNNs")]),t._v(" "),s("p",[t._v("这一节从马可夫链开始，到一个简单的 RNN 实现结束，主要的难点还是在 RNN 实现方面的细节。")]),t._v(" "),s("p",[t._v("This section begins from Markov Chain, and concludes with a basic implementation of an RNN from scratch. The main challenge lies in the detailed of implementation of the RNN.")]),t._v(" "),s("h2",{attrs:{id:"循环神经网络从零开始实现-rnn-scratch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环神经网络从零开始实现-rnn-scratch"}},[t._v("#")]),t._v(" 循环神经网络从零开始实现 / rnn scratch")]),t._v(" "),s("h3",{attrs:{id:"数据格式-data-format"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据格式-data-format"}},[t._v("#")]),t._v(" 数据格式 / data format")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("train_iter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vocab "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" load_data_time_machine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("batch_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_steps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("笔记")]),t._v(" "),s("p",[t._v("train_iter: 每次输出一个批量大小的 X 和 Y 。")]),t._v(" "),s("p",[t._v("train_iter: ouput a batch of X and Y with each iteration")]),t._v(" "),s("p",[t._v("X:  tensor([[13, 14, 15, 16, 17],\n[28, 29, 30, 31, 32]])")]),t._v(" "),s("p",[t._v("Y: tensor([[14, 15, 16, 17, 18],\n[29, 30, 31, 32, 33]])")]),t._v(" "),s("p",[t._v("X:  tensor([[ 3,  4,  5,  6,  7],\n[18, 19, 20, 21, 22]])")]),t._v(" "),s("p",[t._v("Y: tensor([[ 4,  5,  6,  7,  8],\n[19, 20, 21, 22, 23]])")]),t._v(" "),s("p",[t._v("X:  tensor([[ 8,  9, 10, 11, 12],\n[23, 24, 25, 26, 27]])")]),t._v(" "),s("p",[t._v("Y: tensor([[ 9, 10, 11, 12, 13],\n[24, 25, 26, 27, 28]])")])]),t._v(" "),s("h3",{attrs:{id:"为什么要对-x-进行转置-why-should-we-transpose-tensor-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要对-x-进行转置-why-should-we-transpose-tensor-x"}},[t._v("#")]),t._v(" 为什么要对 X 进行转置 / why should we transpose tensor X")]),t._v(" "),s("p",[t._v("首先需要知道的是本节所有的预测都是对"),s("mark",[t._v("字符")]),t._v("的预测，所以 one_hot 的分类数是 28 。")]),t._v(" "),s("p",[t._v("Firstly, it is important to note that all predictions in this section are predictions of characters, so the number of class for the one-hot encoding is 28.")]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("笔记")]),t._v(" "),s("p",[t._v("26 个英文字母 + 空格 + unk")]),t._v(" "),s("p",[t._v("26 English characters + space + unk")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" torch\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" functional "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" F\n\nX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reshape"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" F"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one_hot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ans"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ans"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shape"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("每次做的是对一个批量进行预测，所以每次我们取的是")]),t._v(" "),s("p",[t._v("Since our predictions are conducted on batches, our selection  contain")]),t._v(" "),s("p",{staticClass:"katex-block"},[s("span",{staticClass:"katex-display"},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[s("semantics",[s("mrow",[s("mo",{attrs:{fence:"true"}},[t._v("[")]),s("mtable",{attrs:{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"}},[s("mtr",[s("mtd",[s("mstyle",{attrs:{scriptlevel:"0",displaystyle:"false"}},[s("mn",[t._v("0")])],1)],1),s("mtd",[s("mstyle",{attrs:{scriptlevel:"0",displaystyle:"false"}},[s("mn",[t._v("1")])],1)],1)],1),s("mtr",[s("mtd",[s("mstyle",{attrs:{scriptlevel:"0",displaystyle:"false"}},[s("mn",[t._v("1")])],1)],1),s("mtd",[s("mstyle",{attrs:{scriptlevel:"0",displaystyle:"false"}},[s("mn",[t._v("2")])],1)],1)],1),s("mtr",[s("mtd",[s("mstyle",{attrs:{scriptlevel:"0",displaystyle:"false"}},[s("mn",[t._v("2")])],1)],1),s("mtd",[s("mstyle",{attrs:{scriptlevel:"0",displaystyle:"false"}},[s("mn",[t._v("3")])],1)],1)],1)],1),s("mo",{attrs:{fence:"true"}},[t._v("]")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\begin{bmatrix}\n0&1\\\\\n1&2\\\\\n2&3\\\\\n\\end{bmatrix}")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{staticClass:"minner"},[s("span",{staticClass:"mopen"},[s("span",{staticClass:"delimsizing mult"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"2.05em"}},[s("span",{staticStyle:{top:"-2.25em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3.155em"}}),s("span",{staticClass:"delimsizinginner delim-size4"},[s("span",[t._v("⎣")])])]),s("span",{staticStyle:{top:"-3.397em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3.155em"}}),s("span",{staticStyle:{height:"0.016em",width:"0.6667em"}},[s("svg",{staticStyle:{width:"0.6667em"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"0.6667em",height:"0.016em",viewBox:"0 0 666.67 16",preserveAspectRatio:"xMinYMin"}},[s("path",{attrs:{d:"M319 0 H403 V16 H319z M319 0 H403 V16 H319z"}})])])]),s("span",{staticStyle:{top:"-4.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3.155em"}}),s("span",{staticClass:"delimsizinginner delim-size4"},[s("span",[t._v("⎡")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"1.55em"}},[s("span")])])])])]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mtable"},[s("span",{staticClass:"col-align-c"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"2.05em"}},[s("span",{staticStyle:{top:"-4.21em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("0")])])]),s("span",{staticStyle:{top:"-3.01em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("1")])])]),s("span",{staticStyle:{top:"-1.81em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("2")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"1.55em"}},[s("span")])])])]),s("span",{staticClass:"arraycolsep",staticStyle:{width:"0.5em"}}),s("span",{staticClass:"arraycolsep",staticStyle:{width:"0.5em"}}),s("span",{staticClass:"col-align-c"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"2.05em"}},[s("span",{staticStyle:{top:"-4.21em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("1")])])]),s("span",{staticStyle:{top:"-3.01em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("2")])])]),s("span",{staticStyle:{top:"-1.81em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("3")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"1.55em"}},[s("span")])])])])])]),s("span",{staticClass:"mclose"},[s("span",{staticClass:"delimsizing mult"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"2.05em"}},[s("span",{staticStyle:{top:"-2.25em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3.155em"}}),s("span",{staticClass:"delimsizinginner delim-size4"},[s("span",[t._v("⎦")])])]),s("span",{staticStyle:{top:"-3.397em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3.155em"}}),s("span",{staticStyle:{height:"0.016em",width:"0.6667em"}},[s("svg",{staticStyle:{width:"0.6667em"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"0.6667em",height:"0.016em",viewBox:"0 0 666.67 16",preserveAspectRatio:"xMinYMin"}},[s("path",{attrs:{d:"M263 0 H347 V16 H263z M263 0 H347 V16 H263z"}})])])]),s("span",{staticStyle:{top:"-4.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3.155em"}}),s("span",{staticClass:"delimsizinginner delim-size4"},[s("span",[t._v("⎤")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"1.55em"}},[s("span")])])])])])])])])])])]),t._v(" "),s("p",[t._v("这里将X进行转置后相邻的批次读取的是"),s("mark",[t._v("时间")]),t._v("上连续的，也就是文本顺序是正确的。")]),t._v(" "),s("p",[t._v("We transpose X to ensure that consecutive batches are read in time order, meaning the text sequence is pre preserved")]),t._v(" "),s("h3",{attrs:{id:"转置的好处-the-benefits-of-transposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转置的好处-the-benefits-of-transposition"}},[t._v("#")]),t._v(" 转置的好处 / the benefits of transposition")]),t._v(" "),s("p",[t._v("其实就是一个行优先和列优先的问题，以及个人的习惯。")]),t._v(" "),s("p",[t._v("this a column provity or row proviet, and personal habbits\nthis is actually a question of row priority versus column priority, as well as individual habits")]),t._v(" "),s("p",[t._v("python 是行优先的，所以每次批量读取转值后会带来 cache 命中的提升。")]),t._v(" "),s("p",[t._v("Python follows row priority, so each batch transpositon will result in improvement in cache hit rate")]),t._v(" "),s("h2",{attrs:{id:"torch-mm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#torch-mm"}},[t._v("#")]),t._v(" torch.mm")]),t._v(" "),s("p",[t._v("还是看GPT吧")]),t._v(" "),s("p",[t._v("torch.mm() 和 torch.matmul() 是 PyTorch 中用于执行矩阵乘法的两个函数，它们有一些区别：")]),t._v(" "),s("h3",{attrs:{id:"输入类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入类型"}},[t._v("#")]),t._v(" 输入类型：")]),t._v(" "),s("p",[t._v("torch.mm() 只能接受二维张量作为输入，即矩阵。")]),t._v(" "),s("p",[t._v("torch.matmul() 可以接受张量的任意维度作为输入，因此可以用于更广泛的矩阵乘法操作，包括批量矩阵乘法、广播等。")]),t._v(" "),s("h3",{attrs:{id:"广播规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#广播规则"}},[t._v("#")]),t._v(" 广播规则：")]),t._v(" "),s("p",[t._v("torch.mm() 对输入张量进行严格的形状匹配，要求两个输入张量的形状都是二维，并且第一个张量的列数必须等于第二个张量的行数。")]),t._v(" "),s("p",[t._v("torch.matmul() 则遵循广播规则，可以在满足一定条件的情况下，对具有不同形状的张量进行乘法操作。例如，可以对两个三维张量进行乘法，其中第一个张量的最后两个维度的形状必须与第二个张量的倒数两个维度的形状相匹配。")]),t._v(" "),s("h3",{attrs:{id:"支持批量矩阵乘法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支持批量矩阵乘法"}},[t._v("#")]),t._v(" 支持批量矩阵乘法：")]),t._v(" "),s("p",[t._v("torch.mm() 不支持批量矩阵乘法，即一次性处理多个矩阵乘积。")]),t._v(" "),s("p",[t._v("torch.matmul() 可以通过在输入张量的前面添加额外的维度来支持批量矩阵乘法，这在处理多个样本或批次数据时非常有用。")]),t._v(" "),s("h2",{attrs:{id:"有关-y-label"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有关-y-label"}},[t._v("#")]),t._v(" 有关 Y/label")]),t._v(" "),s("p",[t._v("Y是一个 2x5 的 tensor ， rnn输出的是一个 10x28 的 tensor，这也就意味着 loss 那里要做一个 reshape。")]),t._v(" "),s("h3",{attrs:{id:"rnn-细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rnn-细节"}},[t._v("#")]),t._v(" rnn 细节")]),t._v(" "),s("p",[t._v("output 是一个 len 为 5 的 list 。list 里面为 torch.size(2,28) 的tensor。")]),t._v(" "),s("p",[t._v("对 list 进行 cat dim = 0 。")])])}),[],!1,null,null,null);s.default=n.exports}}]);